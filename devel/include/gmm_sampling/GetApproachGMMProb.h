// Generated by gencpp from file gmm_sampling/GetApproachGMMProb.msg
// DO NOT EDIT!


#ifndef GMM_SAMPLING_MESSAGE_GETAPPROACHGMMPROB_H
#define GMM_SAMPLING_MESSAGE_GETAPPROACHGMMPROB_H

#include <ros/service_traits.h>


#include <gmm_sampling/GetApproachGMMProbRequest.h>
#include <gmm_sampling/GetApproachGMMProbResponse.h>


namespace gmm_sampling
{

struct GetApproachGMMProb
{

typedef GetApproachGMMProbRequest Request;
typedef GetApproachGMMProbResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetApproachGMMProb
} // namespace gmm_sampling


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMProb > {
  static const char* value()
  {
    return "ccd2986d40d561ab74fba4a6bdb71848";
  }

  static const char* value(const ::gmm_sampling::GetApproachGMMProb&) { return value(); }
};

template<>
struct DataType< ::gmm_sampling::GetApproachGMMProb > {
  static const char* value()
  {
    return "gmm_sampling/GetApproachGMMProb";
  }

  static const char* value(const ::gmm_sampling::GetApproachGMMProb&) { return value(); }
};


// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMProbRequest> should match 
// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMProb > 
template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMProbRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gmm_sampling::GetApproachGMMProb >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMProbRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gmm_sampling::GetApproachGMMProbRequest> should match 
// service_traits::DataType< ::gmm_sampling::GetApproachGMMProb > 
template<>
struct DataType< ::gmm_sampling::GetApproachGMMProbRequest>
{
  static const char* value()
  {
    return DataType< ::gmm_sampling::GetApproachGMMProb >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMProbRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMProbResponse> should match 
// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMProb > 
template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMProbResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gmm_sampling::GetApproachGMMProb >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMProbResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gmm_sampling::GetApproachGMMProbResponse> should match 
// service_traits::DataType< ::gmm_sampling::GetApproachGMMProb > 
template<>
struct DataType< ::gmm_sampling::GetApproachGMMProbResponse>
{
  static const char* value()
  {
    return DataType< ::gmm_sampling::GetApproachGMMProb >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMProbResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GMM_SAMPLING_MESSAGE_GETAPPROACHGMMPROB_H
