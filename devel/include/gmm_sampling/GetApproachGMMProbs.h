// Generated by gencpp from file gmm_sampling/GetApproachGMMProbs.msg
// DO NOT EDIT!


#ifndef GMM_SAMPLING_MESSAGE_GETAPPROACHGMMPROBS_H
#define GMM_SAMPLING_MESSAGE_GETAPPROACHGMMPROBS_H

#include <ros/service_traits.h>


#include <gmm_sampling/GetApproachGMMProbsRequest.h>
#include <gmm_sampling/GetApproachGMMProbsResponse.h>


namespace gmm_sampling
{

struct GetApproachGMMProbs
{

typedef GetApproachGMMProbsRequest Request;
typedef GetApproachGMMProbsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetApproachGMMProbs
} // namespace gmm_sampling


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMProbs > {
  static const char* value()
  {
    return "7d2e9fd8df330e05a0d7f3f45a2a580e";
  }

  static const char* value(const ::gmm_sampling::GetApproachGMMProbs&) { return value(); }
};

template<>
struct DataType< ::gmm_sampling::GetApproachGMMProbs > {
  static const char* value()
  {
    return "gmm_sampling/GetApproachGMMProbs";
  }

  static const char* value(const ::gmm_sampling::GetApproachGMMProbs&) { return value(); }
};


// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMProbsRequest> should match 
// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMProbs > 
template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMProbsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gmm_sampling::GetApproachGMMProbs >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMProbsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gmm_sampling::GetApproachGMMProbsRequest> should match 
// service_traits::DataType< ::gmm_sampling::GetApproachGMMProbs > 
template<>
struct DataType< ::gmm_sampling::GetApproachGMMProbsRequest>
{
  static const char* value()
  {
    return DataType< ::gmm_sampling::GetApproachGMMProbs >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMProbsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMProbsResponse> should match 
// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMProbs > 
template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMProbsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gmm_sampling::GetApproachGMMProbs >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMProbsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gmm_sampling::GetApproachGMMProbsResponse> should match 
// service_traits::DataType< ::gmm_sampling::GetApproachGMMProbs > 
template<>
struct DataType< ::gmm_sampling::GetApproachGMMProbsResponse>
{
  static const char* value()
  {
    return DataType< ::gmm_sampling::GetApproachGMMProbs >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMProbsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GMM_SAMPLING_MESSAGE_GETAPPROACHGMMPROBS_H
