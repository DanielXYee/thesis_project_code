// Generated by gencpp from file gmm_sampling/GetApproachGMMSamples.msg
// DO NOT EDIT!


#ifndef GMM_SAMPLING_MESSAGE_GETAPPROACHGMMSAMPLES_H
#define GMM_SAMPLING_MESSAGE_GETAPPROACHGMMSAMPLES_H

#include <ros/service_traits.h>


#include <gmm_sampling/GetApproachGMMSamplesRequest.h>
#include <gmm_sampling/GetApproachGMMSamplesResponse.h>


namespace gmm_sampling
{

struct GetApproachGMMSamples
{

typedef GetApproachGMMSamplesRequest Request;
typedef GetApproachGMMSamplesResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetApproachGMMSamples
} // namespace gmm_sampling


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMSamples > {
  static const char* value()
  {
    return "39c3821b9d89c2c5ed582a1e164cc75d";
  }

  static const char* value(const ::gmm_sampling::GetApproachGMMSamples&) { return value(); }
};

template<>
struct DataType< ::gmm_sampling::GetApproachGMMSamples > {
  static const char* value()
  {
    return "gmm_sampling/GetApproachGMMSamples";
  }

  static const char* value(const ::gmm_sampling::GetApproachGMMSamples&) { return value(); }
};


// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMSamplesRequest> should match 
// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMSamples > 
template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMSamplesRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gmm_sampling::GetApproachGMMSamples >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMSamplesRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gmm_sampling::GetApproachGMMSamplesRequest> should match 
// service_traits::DataType< ::gmm_sampling::GetApproachGMMSamples > 
template<>
struct DataType< ::gmm_sampling::GetApproachGMMSamplesRequest>
{
  static const char* value()
  {
    return DataType< ::gmm_sampling::GetApproachGMMSamples >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMSamplesRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMSamplesResponse> should match 
// service_traits::MD5Sum< ::gmm_sampling::GetApproachGMMSamples > 
template<>
struct MD5Sum< ::gmm_sampling::GetApproachGMMSamplesResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gmm_sampling::GetApproachGMMSamples >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMSamplesResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gmm_sampling::GetApproachGMMSamplesResponse> should match 
// service_traits::DataType< ::gmm_sampling::GetApproachGMMSamples > 
template<>
struct DataType< ::gmm_sampling::GetApproachGMMSamplesResponse>
{
  static const char* value()
  {
    return DataType< ::gmm_sampling::GetApproachGMMSamples >::value();
  }
  static const char* value(const ::gmm_sampling::GetApproachGMMSamplesResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GMM_SAMPLING_MESSAGE_GETAPPROACHGMMSAMPLES_H
